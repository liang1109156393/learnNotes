<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-4.3.xsd">
    <!--控制反转:对象的创建和组装由spring处理,依赖注入:对象创建所依赖的属性设置-->
    <!--bean 创建方式 1、构造函数 2、静态工厂方法 3、实例工厂方法 4、FactoryBean-->
    <!--bean作用域:singleton prototype   web容器中的作用域:request session application -->
    <!--注入方式:构造函数，set方法-->
    <!--构造函数-->
    <bean id="myBean" name="myBean" class="com.zxl.basic.spring.bean.MyBean">
        <constructor-arg index="0" value="zhang"/>
        <constructor-arg index="1" value="2"/>
    </bean>
    <!--静态工厂方法-->
    <bean id="myBean1" name="myBean1" class="com.zxl.basic.spring.bean.StaticFactory" factory-method="builderMyBean" />
    <!--实例工厂方法-->
    <bean id="instanceFactory" class="com.zxl.basic.spring.bean.InstanceFactory"/>
    <bean id="myBean2" name="myBean2" factory-bean="instanceFactory" factory-method="buildInstance" />
    <!--factoryBean接口-->
    <bean id="myBean3" class="com.zxl.basic.spring.bean.MyFactoryBean" />

    <!--注入方式:构造函数-->
    <bean id="injectBean" class="com.zxl.basic.spring.bean.InjectMyBean">
        <constructor-arg ref="myBean" />
    </bean>
    <!--setter方法注入-->
    <bean id="injectBean2" class="com.zxl.basic.spring.bean.InjectMyBean">
        <property name="myBean" ref="myBean"/>
    </bean>
    <!--自动装类型: no不适用自动装配, byName根据名称 byType根据类型 construct default(byName)-->
    <!--DependsOn bean的创建依赖于其他的过个bean-->
    <!--primary 当容器中出现多个bean时 1、可以依赖primary 作为首选bean 2、autowire-candidate 候选bean-->
    <!--bean的延迟加载,lazy-init 容器启动时不初始化，在使用时才初始化-->
    <!-- abstract="true" 和 parent=""引用 可以抽象出公用的部分，但是spring中没有这个实例-->
    <!--单例bean中使用多例bean 利用ApplicationContextAware接口的context.getBean创建   也可使用lookup-method @LookUp 注解 也可以使用replaced-method 方法替换-->
</beans>